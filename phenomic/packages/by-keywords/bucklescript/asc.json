{"hasPreviousPage":false,"hasNextPage":false,"list":[{"id":"bs-svg-attachment","filename":"bs-svg-attachment.json","type":"published","name":"bs-svg-attachment","version":"0.3.0","description":"Tiny SVG utilities","author":"henoc","license":"MIT","keywords":["svg","bucklescript"],"analyzed":"2017-12-13T13:21:07.460Z","updated":"2017-12-13T13:21:07.460Z","stars":0,"score":0.544158430838236,"quality":0.6271640850475229,"popularity":0.022788427501403932,"maintenance":0.994380730567108,"homepageUrl":"https://github.com/Henoc/bs-svg-attachment#readme","repositoryUrl":"https://github.com/Henoc/bs-svg-attachment","npmUrl":"https://www.npmjs.com/package/bs-svg-attachment","issuesUrl":"https://github.com/Henoc/bs-svg-attachment/issues","docsUrl":null,"path":"packages/bs-svg-attachment"},{"id":"@nebuta/bs-jquery","filename":"%40nebuta%2Fbs-jquery.json","type":"published","name":"@nebuta/bs-jquery","version":"0.0.2","description":"jQuery binding for BuckleScript","author":"Nebuta","license":"MIT","keywords":["jquery","ocaml","bucklescript"],"analyzed":"2017-12-18T00:18:41.490Z","updated":"2017-12-18T00:18:41.490Z","score":0.032381325405460265,"quality":0.1039897385652633,"popularity":0.0033840109596607877,"maintenance":0,"homepageUrl":"https://github.com/nebuta/bucklescript-jquery","repositoryUrl":"https://github.com/nebuta/bucklescript-jquery","npmUrl":"https://www.npmjs.com/package/%40nebuta%2Fbs-jquery","issuesUrl":"https://github.com/nebuta/bucklescript-jquery/issues","docsUrl":null,"path":"packages/@nebuta/bs-jquery"},{"id":"bs-axios","filename":"bs-axios.json","type":"published","name":"bs-axios","version":"0.0.22","description":"Axios bindings for Bucklescript","author":"meafmira","license":"MIT","keywords":["bs-axios","axios","ocaml","bsb","bs-platform","bucklescript","reason"],"analyzed":"2017-12-16T19:52:55.348Z","updated":"2017-12-16T19:52:55.348Z","stars":9,"score":0.5170371089191989,"quality":0.4950118571585468,"popularity":0.053234100054268624,"maintenance":0.9997189050075452,"homepageUrl":"https://github.com/meafmira/bs-axios#readme","repositoryUrl":"https://github.com/meafmira/bs-axios","npmUrl":"https://www.npmjs.com/package/bs-axios","issuesUrl":"https://github.com/meafmira/bs-axios/issues","docsUrl":null,"path":"packages/bs-axios"},{"id":"bs-batteries","filename":"bs-batteries.json","type":"published","name":"bs-batteries","version":"0.0.14","description":"Ocaml batteries for bucklescript","author":"meafmira","license":"MIT","keywords":["batteries-included","ocaml","bsb","bs-platform","bucklescript","bs-batteries","reason"],"analyzed":"2017-12-22T11:34:34.769Z","updated":"2017-12-22T11:34:34.769Z","stars":6,"score":0.5765491535472282,"quality":0.6422086030345037,"popularity":0.10279774528045962,"maintenance":0.9940210336820468,"homepageUrl":"https://github.com/meafmira/bs-batteries#readme","repositoryUrl":"https://github.com/meafmira/bs-batteries","npmUrl":"https://www.npmjs.com/package/bs-batteries","issuesUrl":"https://github.com/meafmira/bs-batteries/issues","docsUrl":null,"path":"packages/bs-batteries"},{"id":"bs-chalk","filename":"bs-chalk.json","type":"published","name":"bs-chalk","version":"0.1.1","description":"BuckleScript interface to the node 'chalk' library","author":"Brandon Konkle","license":"BSD-2-Clause","keywords":["color","node","bucklescript","reason","chalk"],"analyzed":"2017-12-19T04:43:30.932Z","updated":"2017-12-19T04:43:30.932Z","stars":0,"score":0.4800622565695366,"quality":0.40931814296472463,"popularity":0.02076715912395537,"maintenance":0.9999951656763855,"homepageUrl":"https://github.com/ecliptic/bucklescript-tools#readme","repositoryUrl":"https://github.com/ecliptic/bucklescript-tools","npmUrl":"https://www.npmjs.com/package/bs-chalk","issuesUrl":"https://github.com/ecliptic/bucklescript-tools/issues","docsUrl":null,"path":"packages/bs-chalk"},{"id":"bs-css","filename":"bs-css.json","type":"published","name":"bs-css","version":"5.2.0","description":"BuckleScript bindings for glamor","author":"Jan Poeschko","license":"ISC","keywords":["css","glamor","bucklescript","reason"],"analyzed":"2017-12-21T21:10:32.010Z","updated":"2017-12-21T21:10:32.010Z","stars":48,"score":0.5409310823896777,"quality":0.5399585366387434,"popularity":0.08269816498713677,"maintenance":0.9999976104358768,"homepageUrl":"https://github.com/SentiaAnalytics/bs-css#readme","repositoryUrl":"https://github.com/SentiaAnalytics/bs-css","npmUrl":"https://www.npmjs.com/package/bs-css","issuesUrl":"https://github.com/SentiaAnalytics/bs-css/issues","docsUrl":null,"path":"packages/bs-css"},{"id":"bs-dataloader","filename":"bs-dataloader.json","type":"published","name":"bs-dataloader","version":"0.3.0","description":"This is a rewrite in reasonml of https://github.com/facebook/dataloader/blob/master/src/index.js","license":"MIT","keywords":["dataloader","bucklescript"],"analyzed":"2017-12-13T12:52:38.966Z","updated":"2017-12-13T12:52:38.966Z","stars":17,"score":0.5890353186584185,"quality":0.7398390067121974,"popularity":0.04997848549061599,"maintenance":0.9988318477801248,"homepageUrl":"https://github.com/ulrikstrid/bs-dataloader#readme","repositoryUrl":"https://github.com/ulrikstrid/bs-dataloader","npmUrl":"https://www.npmjs.com/package/bs-dataloader","issuesUrl":"https://github.com/ulrikstrid/bs-dataloader/issues","docsUrl":null,"path":"packages/bs-dataloader"},{"id":"bs-date-fns","filename":"bs-date-fns.json","type":"published","name":"bs-date-fns","version":"0.1.2","description":"Bucklescript bindings to date-fns","author":"Arnoldas Sidlauskas","license":"MIT","keywords":["date-fns","bucklescript","reason"],"analyzed":"2017-12-11T18:34:17.166Z","updated":"2017-12-11T18:34:17.166Z","stars":0,"score":0.35774840813580877,"quality":0.41167083833848434,"popularity":0.009716127453541567,"maintenance":0.6595614629300683,"homepageUrl":"https://github.com/SllyQ/bs-date-fns#readme","repositoryUrl":"https://github.com/SllyQ/bs-date-fns","npmUrl":"https://www.npmjs.com/package/bs-date-fns","issuesUrl":"https://github.com/SllyQ/bs-date-fns/issues","docsUrl":null,"path":"packages/bs-date-fns"},{"id":"bs-director","filename":"bs-director.json","type":"published","name":"bs-director","version":"0.0.6","description":"BuckleScript bindings to the Director router","license":"MIT","keywords":["ocaml","bucklescript","reason"],"analyzed":"2017-12-24T12:18:36.305Z","updated":"2017-12-24T12:18:36.305Z","score":0.26440861237116464,"quality":0.43004566138517225,"popularity":0.05350927796841812,"maintenance":0.3333333333333333,"npmUrl":"https://www.npmjs.com/package/bs-director","docsUrl":null,"path":"packages/bs-director"},{"id":"bs-dom","filename":"bs-dom.json","type":"published","name":"bs-dom","version":"0.0.7","description":"A dom binding for bucklescript","author":"0zat","license":"GPL-2.0","keywords":["ocaml","map","bucklescript"],"analyzed":"2017-12-21T19:57:02.288Z","updated":"2017-12-21T19:57:02.288Z","stars":9,"score":0.4855960311592881,"quality":0.5382423687816679,"popularity":0.03990066399986352,"maintenance":0.8861659660709587,"homepageUrl":"https://github.com/0zat/bs-dom.git","repositoryUrl":"https://github.com/0zat/bs-dom","npmUrl":"https://www.npmjs.com/package/bs-dom","issuesUrl":"https://github.com/0zat/bs-dom.git","docsUrl":null,"path":"packages/bs-dom"},{"id":"bs-enzyme","filename":"bs-enzyme.json","type":"published","name":"bs-enzyme","version":"0.3.0","description":"Bucklescript bindings for Enzyme","author":"Rhys Powell","license":"MIT","keywords":["bucklescript","testing","enzyme"],"analyzed":"2017-12-15T17:31:18.968Z","updated":"2017-12-15T17:31:18.968Z","stars":15,"score":0.6032854205957334,"quality":0.7844486647188749,"popularity":0.05134452467111535,"maintenance":0.999943535843373,"homepageUrl":"https://github.com/rpowelll/bs-enzyme#readme","repositoryUrl":"https://github.com/rpowelll/bs-enzyme","npmUrl":"https://www.npmjs.com/package/bs-enzyme","issuesUrl":"https://github.com/rpowelll/bs-enzyme/issues","docsUrl":null,"path":"packages/bs-enzyme"},{"id":"bs-fetch","filename":"bs-fetch.json","type":"published","name":"bs-fetch","version":"0.2.0","description":"Fetch bindings for BuckleScript","author":"glennsl","license":"MIT","keywords":["browser","fetch","bucklescript","xhr"],"analyzed":"2017-12-22T23:43:18.645Z","updated":"2017-12-22T23:43:18.645Z","stars":41,"score":0.511628592871372,"quality":0.41167083833848434,"popularity":0.11778812319785856,"maintenance":0.9911471378587892,"homepageUrl":"https://github.com/reasonml-community/bs-fetch#readme","repositoryUrl":"https://github.com/reasonml-community/bs-fetch","npmUrl":"https://www.npmjs.com/package/bs-fetch","issuesUrl":"https://github.com/reasonml-community/bs-fetch/issues","docsUrl":null,"path":"packages/bs-fetch"},{"id":"bs-glamor","filename":"bs-glamor.json","type":"published","name":"bs-glamor","version":"0.1.3","description":"BuckleScript bindings for glamor","author":"Jan Poeschko","license":"ISC","keywords":["css","glamor","bucklescript","reason"],"analyzed":"2017-12-14T16:36:22.262Z","updated":"2017-12-14T16:36:22.262Z","stars":45,"score":0.6002183012277538,"quality":0.7447304008767317,"popularity":0.09108360245619977,"maintenance":0.9854854860144695,"homepageUrl":"https://github.com/poeschko/bs-glamor#readme","repositoryUrl":"https://github.com/poeschko/bs-glamor","npmUrl":"https://www.npmjs.com/package/bs-glamor","issuesUrl":"https://github.com/poeschko/bs-glamor/issues","docsUrl":null,"path":"packages/bs-glamor"},{"id":"bs-jest","filename":"bs-jest.json","type":"published","name":"bs-jest","version":"0.2.0","description":"BuckleScript bindings to the Jest testing framework","author":"glennsl","license":"MIT","keywords":["test","jest","bucklescript"],"analyzed":"2017-12-22T23:34:32.034Z","updated":"2017-12-22T23:34:32.034Z","stars":55,"score":0.5199543870901007,"quality":0.8155999818221106,"popularity":0.12643997926868442,"maintenance":0.6600582851412229,"homepageUrl":"https://github.com/reasonml-community/bs-jest#readme","repositoryUrl":"https://github.com/reasonml-community/bs-jest","npmUrl":"https://www.npmjs.com/package/bs-jest","issuesUrl":"https://github.com/reasonml-community/bs-jest/issues","docsUrl":null,"path":"packages/bs-jest"},{"id":"bs-json","filename":"bs-json.json","type":"published","name":"bs-json","version":"0.2.4","description":"Experimental JSON encode/decode library for BuckleScript.","author":"glennsl","license":"MIT","keywords":["json","bucklescript"],"analyzed":"2017-12-19T23:18:54.426Z","updated":"2017-12-19T23:18:54.426Z","stars":37,"score":0.6186530320152803,"quality":0.7398390067121974,"popularity":0.1334675926393613,"maintenance":0.9999647787938417,"homepageUrl":"https://github.com/reasonml-community/bs-json#readme","repositoryUrl":"https://github.com/reasonml-community/bs-json","npmUrl":"https://www.npmjs.com/package/bs-json","issuesUrl":"https://github.com/reasonml-community/bs-json/issues","docsUrl":null,"path":"packages/bs-json"},{"id":"bs-knex","filename":"bs-knex.json","type":"published","name":"bs-knex","version":"0.2.1","description":"BuckleScript interface to the node 'knex' library","author":"Brandon Konkle","license":"BSD-2-Clause","keywords":["knex","sql","database","node","bucklescript","reason"],"analyzed":"2017-12-19T04:44:23.862Z","updated":"2017-12-19T04:44:23.862Z","stars":0,"score":0.4898424412442207,"quality":0.4404449708819793,"popularity":0.02203040569397734,"maintenance":0.9999951656763855,"homepageUrl":"https://github.com/ecliptic/bucklescript-tools#readme","repositoryUrl":"https://github.com/ecliptic/bucklescript-tools","npmUrl":"https://www.npmjs.com/package/bs-knex","issuesUrl":"https://github.com/ecliptic/bucklescript-tools/issues","docsUrl":null,"path":"packages/bs-knex"},{"id":"bs-little-parser","filename":"bs-little-parser.json","type":"published","name":"bs-little-parser","version":"0.3.4","description":"Little parser combinator for BuckleScript or Reason.","author":"henoc","license":"MIT","keywords":["bucklescript","reason"],"analyzed":"2017-12-20T17:55:30.744Z","updated":"2017-12-20T17:55:30.744Z","stars":2,"score":0.5805662802940511,"quality":0.7011076458988124,"popularity":0.06343577343005206,"maintenance":0.9943756166396833,"homepageUrl":"https://github.com/Henoc/bs-little-parser#readme","repositoryUrl":"https://github.com/Henoc/bs-little-parser","npmUrl":"https://www.npmjs.com/package/bs-little-parser","issuesUrl":"https://github.com/Henoc/bs-little-parser/issues","docsUrl":null,"path":"packages/bs-little-parser"},{"id":"bs-material-ui","filename":"bs-material-ui.json","type":"published","name":"bs-material-ui","version":"0.1.16","description":"Reason bindings for material-ui","author":"Jonathon Kelly","license":"MIT","keywords":["react","material design","react-component","material-ui","bucklescript"],"analyzed":"2017-12-23T02:09:43.731Z","updated":"2017-12-23T02:09:43.731Z","stars":9,"score":0.5285054866177621,"quality":0.5237859897020418,"popularity":0.06106055424066821,"maintenance":0.9999957020654733,"homepageUrl":"https://github.com/InsidersByte/bs-material-ui#readme","repositoryUrl":"https://github.com/InsidersByte/bs-material-ui","npmUrl":"https://www.npmjs.com/package/bs-material-ui","issuesUrl":"https://github.com/InsidersByte/bs-material-ui/issues","docsUrl":null,"path":"packages/bs-material-ui"},{"id":"bs-material-ui-icons","filename":"bs-material-ui-icons.json","type":"published","name":"bs-material-ui-icons","version":"0.1.5","description":"Reason bindings for material-ui-icons","author":"Jonathon Kelly","license":"MIT","keywords":["react","icons","material","react-component","material-ui","bucklescript","design"],"analyzed":"2017-12-22T07:19:40.160Z","updated":"2017-12-22T07:19:40.160Z","stars":1,"score":0.5183076649888043,"quality":0.5237859897020418,"popularity":0.032292907259712386,"maintenance":0.9996267158208356,"homepageUrl":"https://github.com/InsidersByte/bs-material-ui-icons#readme","repositoryUrl":"https://github.com/InsidersByte/bs-material-ui-icons","npmUrl":"https://www.npmjs.com/package/bs-material-ui-icons","issuesUrl":"https://github.com/InsidersByte/bs-material-ui-icons/issues","docsUrl":null,"path":"packages/bs-material-ui-icons"},{"id":"bs-mongodb","filename":"bs-mongodb.json","type":"published","name":"bs-mongodb","version":"0.1.2","description":"[![Build Status](https://travis-ci.org/PeteProgrammer/bs-mongodb.svg?branch=master)](https://travis-ci.org/PeteProgrammer/bs-mongodb)","license":"MIT","keywords":["bucklescript"],"analyzed":"2017-12-10T09:43:29.662Z","updated":"2017-12-10T09:43:29.662Z","score":0.356113524754965,"quality":0.7844486647188749,"popularity":0.011749310493245402,"maintenance":0.3333333333333333,"npmUrl":"https://www.npmjs.com/package/bs-mongodb","docsUrl":null,"path":"packages/bs-mongodb"},{"id":"bs-most","filename":"bs-most.json","type":"published","name":"bs-most","version":"0.1.1","description":"Reason/BuckleScript bindings for the Most.js reactive toolkit Edit","author":"lilactown","license":"MIT","keywords":["async","reactive","most","functional","streams","most.js","promise","ocaml","bucklescript","reason"],"analyzed":"2017-12-23T01:13:56.379Z","updated":"2017-12-23T01:13:56.379Z","stars":16,"score":0.5717055078569131,"quality":0.693527602188663,"popularity":0.045503464430184826,"maintenance":0.9934886132849985,"homepageUrl":"https://github.com/Lokeh/bs-most#readme","repositoryUrl":"https://github.com/Lokeh/bs-most","npmUrl":"https://www.npmjs.com/package/bs-most","issuesUrl":"https://github.com/Lokeh/bs-most/issues","docsUrl":null,"path":"packages/bs-most"},{"id":"bs-next","filename":"bs-next.json","type":"published","name":"bs-next","version":"2.0.0","description":"Reason bindings for Next.js","author":"Ulrik Strid","license":"MIT","keywords":["next","reasonreact","bucklescript","next.js","reason"],"analyzed":"2017-12-16T08:03:35.584Z","updated":"2017-12-16T08:03:35.584Z","stars":10,"score":0.5179727502329766,"quality":0.5115548967865582,"popularity":0.041530322952595955,"maintenance":0.9999161947531447,"homepageUrl":"https://github.com/ulrikstrid/bs-next#readme","repositoryUrl":"https://github.com/ulrikstrid/bs-next","npmUrl":"https://www.npmjs.com/package/bs-next","issuesUrl":"https://github.com/ulrikstrid/bs-next/issues","docsUrl":null,"path":"packages/bs-next"},{"id":"bs-nprogress","filename":"bs-nprogress.json","type":"published","name":"bs-nprogress","version":"0.0.1","description":"BuckleScript bindings to nprogress","author":"Alex Fedoseev","license":"MIT","keywords":["nprogress","ocaml","bucklescript","reason"],"analyzed":"2017-12-24T12:26:24.336Z","updated":"2017-12-24T12:26:24.336Z","stars":1,"score":0.45469479883250596,"quality":0.43004566138517225,"popularity":0.023355852737377458,"maintenance":0.9071615770253492,"homepageUrl":"https://github.com/alexfedoseev/bs-nprogress#readme","repositoryUrl":"https://github.com/alexfedoseev/bs-nprogress","npmUrl":"https://www.npmjs.com/package/bs-nprogress","issuesUrl":"https://github.com/alexfedoseev/bs-nprogress/issues","docsUrl":null,"path":"packages/bs-nprogress"},{"id":"bs-ocaml-protoc-json","filename":"bs-ocaml-protoc-json.json","type":"published","name":"bs-ocaml-protoc-json","version":"0.1.1","description":"Protobuf JSON runtime for BuckleScript","author":"Maxime Ransan","license":"MIT","keywords":["serialization","json","syntax","protobuf","bucklescript"],"analyzed":"2017-12-24T00:00:23.555Z","updated":"2017-12-24T00:00:23.555Z","stars":0,"score":0.5130524969827233,"quality":0.6496999649221961,"popularity":0.02392435073199027,"maintenance":0.8850542421424796,"homepageUrl":"https://github.com/mransan/bs-ocaml-protoc-json","repositoryUrl":"https://github.com/mransan/bs-ocaml-protoc-json","npmUrl":"https://www.npmjs.com/package/bs-ocaml-protoc-json","issuesUrl":"https://github.com/mransan/bs-ocaml-protoc-json/issues","docsUrl":null,"path":"packages/bs-ocaml-protoc-json"},{"id":"bs-promise-router","filename":"bs-promise-router.json","type":"published","name":"bs-promise-router","version":"0.1.2","description":"BuckleScript interface to express-promise-router","author":"Brandon Konkle","license":"BSD-2-Clause","keywords":["scalar","node","graphql","bucklescript","reason","apollo"],"analyzed":"2017-12-19T04:48:10.693Z","updated":"2017-12-19T04:48:10.693Z","stars":0,"score":0.48936844130369805,"quality":0.4404449708819793,"popularity":0.020673186710295624,"maintenance":0.9999980991157167,"homepageUrl":"https://github.com/ecliptic/bucklescript-tools#readme","repositoryUrl":"https://github.com/ecliptic/bucklescript-tools","npmUrl":"https://www.npmjs.com/package/bs-promise-router","issuesUrl":"https://github.com/ecliptic/bucklescript-tools/issues","docsUrl":null,"path":"packages/bs-promise-router"},{"id":"bs-react-fela","filename":"bs-react-fela.json","type":"published","name":"bs-react-fela","version":"0.2.0","description":"BuckleScript bindings for react-fela","author":"Alessandro Strada","license":"MIT","keywords":["react","fela","bucklescript","reason"],"analyzed":"2017-12-10T17:55:16.301Z","updated":"2017-12-10T17:55:16.301Z","stars":6,"score":0.4835684902420404,"quality":0.41167083833848434,"popularity":0.03438792261887421,"maintenance":0.9943756166396833,"homepageUrl":"https://github.com/astrada/bs-react-fela","repositoryUrl":"https://github.com/astrada/bs-react-fela","npmUrl":"https://www.npmjs.com/package/bs-react-fela","issuesUrl":"https://github.com/astrada/bs-react-fela/issues","docsUrl":null,"path":"packages/bs-react-fela"},{"id":"bs-react-intl","filename":"bs-react-intl.json","type":"published","name":"bs-react-intl","version":"0.0.1","description":"BuckleScript bindings to react-intl","author":"Alex Fedoseev","license":"MIT","keywords":["react","react-intl","ocaml","bucklescript","reason"],"analyzed":"2017-12-24T04:26:49.985Z","updated":"2017-12-24T04:26:49.985Z","stars":0,"score":0.43459712270329426,"quality":0.36615444738653175,"popularity":0.020697818652750156,"maintenance":0.9071615770253492,"homepageUrl":"https://github.com/alexfedoseev/bs-react-intl#readme","repositoryUrl":"https://github.com/alexfedoseev/bs-react-intl","npmUrl":"https://www.npmjs.com/package/bs-react-intl","issuesUrl":"https://github.com/alexfedoseev/bs-react-intl/issues","docsUrl":null,"path":"packages/bs-react-intl"},{"id":"bs-react-native","filename":"bs-react-native.json","type":"published","name":"bs-react-native","version":"0.5.0","description":"[![Build Status](https://travis-ci.org/reasonml-community/bs-react-native.svg?branch=master)](https://travis-ci.org/reasonml-community/bs-react-native)","license":"MIT","keywords":["react-native","bucklescript","reason"],"analyzed":"2017-12-15T19:43:09.201Z","updated":"2017-12-15T19:43:09.201Z","stars":186,"score":0.600522918737319,"quality":0.7058660980182657,"popularity":0.110758091734607,"maintenance":0.9999935920706481,"homepageUrl":"https://github.com/reasonml-community/bs-react-native#readme","repositoryUrl":"https://github.com/reasonml-community/bs-react-native","npmUrl":"https://www.npmjs.com/package/bs-react-native","issuesUrl":"https://github.com/reasonml-community/bs-react-native/issues","docsUrl":null,"path":"packages/bs-react-native"},{"id":"bs-react-pdf","filename":"bs-react-pdf.json","type":"published","name":"bs-react-pdf","version":"0.0.13","description":"react-pdf bindings for bucklescript","author":"meafmira","license":"MIT","keywords":["bs-react-pdf","ocaml","bsb","bs-platform","bucklescript","react-pdf","reason"],"analyzed":"2017-12-09T04:28:28.925Z","updated":"2017-12-09T04:28:28.925Z","stars":1,"score":0.4716219813525874,"quality":0.36795505092839365,"popularity":0.03826505610082294,"maintenance":0.9938362755393753,"homepageUrl":"https://github.com/meafmira/bs-react-pdf#readme","repositoryUrl":"https://github.com/meafmira/bs-react-pdf","npmUrl":"https://www.npmjs.com/package/bs-react-pdf","issuesUrl":"https://github.com/meafmira/bs-react-pdf/issues","docsUrl":null,"path":"packages/bs-react-pdf"},{"id":"bs-rebug","filename":"bs-rebug.json","type":"published","name":"bs-rebug","version":"0.2.1","description":"Originally a port of [debug](https://github.com/visionmedia/debug) to BuckleScript, but has since expanded a bit.","author":"glennsl","license":"MIT","keywords":["bucklescript","debug"],"analyzed":"2017-12-17T14:02:15.043Z","updated":"2017-12-17T14:02:15.043Z","score":0.24344298637690448,"quality":0.41167083833848434,"popularity":0.00956484094583832,"maintenance":0.3331258301266165,"npmUrl":"https://www.npmjs.com/package/bs-rebug","docsUrl":null,"path":"packages/bs-rebug"},{"id":"bs-spectacle","filename":"bs-spectacle.json","type":"published","name":"bs-spectacle","version":"0.1.0","description":"---","author":"Piotrek Dubiel","license":"MIT","keywords":["bucklescript","reason","spectacle"],"analyzed":"2017-12-12T20:28:55.998Z","updated":"2017-12-12T20:28:55.998Z","stars":0,"score":0.39036849876212093,"quality":0.5133866802052347,"popularity":0.014443676432499405,"maintenance":0.6608491655690736,"homepageUrl":"https://github.com/piotrdubiel/bs-spectacle#readme","repositoryUrl":"https://github.com/piotrdubiel/bs-spectacle","npmUrl":"https://www.npmjs.com/package/bs-spectacle","issuesUrl":"https://github.com/piotrdubiel/bs-spectacle/issues","docsUrl":null,"path":"packages/bs-spectacle"},{"id":"bs-atom","filename":"bs-atom.json","type":"published","name":"bs-atom","version":"0.1.0","description":"Atom bindings for BuckleScript","author":"glennsl","license":"MIT","keywords":["vscode","extension","bindings","bucklescript"],"analyzed":"2017-12-23T15:27:09.317Z","updated":"2017-12-23T15:27:09.317Z","stars":1,"score":0.45929333592137056,"quality":0.353515229247414,"popularity":0.022548849903544145,"maintenance":0.9867047705168741,"homepageUrl":"https://github.com/glennsl/bs-atom#readme","repositoryUrl":"https://github.com/glennsl/bs-atom","npmUrl":"https://www.npmjs.com/package/bs-atom","issuesUrl":"https://github.com/glennsl/bs-atom/issues","docsUrl":null,"path":"packages/bs-atom"},{"id":"bs-vscode","filename":"bs-vscode.json","type":"published","name":"bs-vscode","version":"0.1.0","description":"Visual Studio Code extension API bindings for BuckleScript","author":"glennsl","license":"MIT","keywords":["vscode","extension","bindings","bucklescript"],"analyzed":"2017-12-23T15:26:53.286Z","updated":"2017-12-23T15:26:53.286Z","stars":2,"score":0.46157685999651393,"quality":0.36284629848253197,"popularity":0.024712616353754605,"maintenance":0.9830672992226863,"homepageUrl":"https://github.com/glennsl/bs-vscode#readme","repositoryUrl":"https://github.com/glennsl/bs-vscode","npmUrl":"https://www.npmjs.com/package/bs-vscode","issuesUrl":"https://github.com/glennsl/bs-vscode/issues","docsUrl":null,"path":"packages/bs-vscode"},{"id":"bucklescript-phx","filename":"bucklescript-phx.json","type":"published","name":"bucklescript-phx","version":"0.1.3","description":"BuckleScript binding for Phoenix Channel/Presence to Phoenix's official JavaScript client","author":"JackalCooper","license":"LGPL-3.0","keywords":["tea","phoenix","ocaml","bucklescript"],"analyzed":"2017-12-22T23:47:11.138Z","updated":"2017-12-22T23:47:11.138Z","stars":11,"score":0.4398146083905495,"quality":0.5063960782201744,"popularity":0.048345864869192616,"maintenance":0.7742135206293708,"homepageUrl":"https://github.com/phoenix-china/bucklescript-phx#readme","repositoryUrl":"https://github.com/phoenix-china/bucklescript-phx","npmUrl":"https://www.npmjs.com/package/bucklescript-phx","issuesUrl":"https://github.com/phoenix-china/bucklescript-phx/issues","docsUrl":null,"path":"packages/bucklescript-phx"},{"id":"bucklescript-tea","filename":"bucklescript-tea.json","type":"published","name":"bucklescript-tea","version":"0.7.0","description":"TEA for Bucklescript","author":"OvermindDL1","license":"LGPL-3.0","keywords":["tea","ocaml","bucklescript"],"analyzed":"2017-12-12T20:11:42.924Z","updated":"2017-12-12T20:11:42.924Z","stars":220,"score":0.6225222404034877,"quality":0.7660485675421725,"popularity":0.12735690908218536,"maintenance":0.9946650056059174,"homepageUrl":"https://github.com/overminddl1/bucklescript-tea#readme","repositoryUrl":"https://github.com/overminddl1/bucklescript-tea","npmUrl":"https://www.npmjs.com/package/bucklescript-tea","issuesUrl":"https://github.com/overminddl1/bucklescript-tea/issues","docsUrl":null,"path":"packages/bucklescript-tea"},{"id":"clj-collection-apis-reasonml","filename":"clj-collection-apis-reasonml.json","type":"published","name":"clj-collection-apis-reasonml","version":"0.5.0","description":"This project aims to implement the Clojure collection APIs for Reason's Array and List types whenever they make sense.","author":"Jason Rose","license":"MIT","keywords":["bucklescript","clojurescript","reason"],"analyzed":"2017-12-22T07:24:48.762Z","updated":"2017-12-22T07:24:48.762Z","stars":2,"score":0.5135751556630328,"quality":0.7011076458988124,"popularity":0.033074843504921195,"maintenance":0.8333333333333333,"homepageUrl":"https://github.com/jasonrose/clj-collection-apis-reasonml#readme","repositoryUrl":"https://github.com/jasonrose/clj-collection-apis-reasonml","npmUrl":"https://www.npmjs.com/package/clj-collection-apis-reasonml","issuesUrl":"https://github.com/jasonrose/clj-collection-apis-reasonml/issues","docsUrl":null,"path":"packages/clj-collection-apis-reasonml"},{"id":"json-r","filename":"json-r.json","type":"published","name":"json-r","version":"2.3.0","description":"A BuckleScript lib for handling JSON in `Result` favor, written in [ReasonML](http://facebook.github.io/reason/).","author":"CHEN Xianan","license":"MIT","keywords":["json","bucklescript"],"analyzed":"2017-12-18T10:32:37.893Z","updated":"2017-12-18T10:32:37.893Z","stars":7,"score":0.6049850705439781,"quality":0.8124786531920637,"popularity":0.03233402942644605,"maintenance":0.9997844693917226,"homepageUrl":"https://github.com/cxa/JsonR","repositoryUrl":"https://github.com/cxa/JsonR","npmUrl":"https://www.npmjs.com/package/json-r","issuesUrl":"https://github.com/cxa/JsonR/issues","docsUrl":null,"path":"packages/json-r"},{"id":"rationale","filename":"rationale.json","type":"published","name":"rationale","version":"0.1.3","description":"Rationale is a collection of helper utility functions that are absent in the OCaml/ReasonML standard library.","license":"MIT","keywords":["lodash","ramda","bucklescript","monad","reason"],"analyzed":"2017-12-22T17:38:28.649Z","updated":"2017-12-22T17:38:28.649Z","stars":32,"score":0.5785005873372709,"quality":0.7011076458988124,"popularity":0.05557291415779631,"maintenance":0.9963364960354244,"homepageUrl":"https://github.com/jonlaing/rationale#readme","repositoryUrl":"https://github.com/jonlaing/rationale","npmUrl":"https://www.npmjs.com/package/rationale","issuesUrl":"https://github.com/jonlaing/rationale/issues","docsUrl":null,"path":"packages/rationale"},{"id":"re-classnames","filename":"re-classnames.json","type":"published","name":"re-classnames","version":"0.0.3","description":"Simple reimplementation of classnames in ReasonML","author":"Alex Fedoseev","license":"MIT","keywords":["reason-react","react","classnames","ocaml","bucklescript","reason"],"analyzed":"2017-12-20T03:32:51.127Z","updated":"2017-12-20T03:32:51.127Z","stars":3,"score":0.5866757411724892,"quality":0.7582138297588854,"popularity":0.03207534555030289,"maintenance":0.9942434894349077,"homepageUrl":"https://github.com/alexfedoseev/re-classnames#readme","repositoryUrl":"https://github.com/alexfedoseev/re-classnames","npmUrl":"https://www.npmjs.com/package/re-classnames","issuesUrl":"https://github.com/alexfedoseev/re-classnames/issues","docsUrl":null,"path":"packages/re-classnames"},{"id":"re-formality","filename":"re-formality.json","type":"published","name":"re-formality","version":"0.0.3","description":"Reasonable form validation tool for reason-react","author":"Alex Fedoseev","license":"MIT","keywords":["reason-react","react","ocaml","bucklescript","reason"],"analyzed":"2017-12-22T22:01:18.479Z","updated":"2017-12-22T22:01:18.479Z","stars":2,"score":0.4879410699803369,"quality":0.43004566138517225,"popularity":0.03118269421851564,"maintenance":0.9943240816808707,"homepageUrl":"https://github.com/alexfedoseev/re-formality#readme","repositoryUrl":"https://github.com/alexfedoseev/re-formality","npmUrl":"https://www.npmjs.com/package/re-formality","issuesUrl":"https://github.com/alexfedoseev/re-formality/issues","docsUrl":null,"path":"packages/re-formality"},{"id":"re-respect","filename":"re-respect.json","type":"published","name":"re-respect","version":"0.4.3","description":"[![Build Status](https://travis-ci.org/PeteProgrammer/respect.svg?branch=master)](https://travis-ci.org/PeteProgrammer/respect)","license":"MIT","keywords":["test","bucklescript","testing","tdd","reason","bdd"],"analyzed":"2017-12-21T11:59:43.498Z","updated":"2017-12-21T11:59:43.498Z","stars":11,"score":0.6170097302045341,"quality":0.8231800255322599,"popularity":0.05730206441387497,"maintenance":1,"homepageUrl":"https://github.com/PeteProgrammer/respect#readme","repositoryUrl":"https://github.com/PeteProgrammer/respect","npmUrl":"https://www.npmjs.com/package/re-respect","issuesUrl":"https://github.com/PeteProgrammer/respect/issues","docsUrl":null,"path":"packages/re-respect"},{"id":"reason-nact","filename":"reason-nact.json","type":"published","name":"reason-nact","version":"1.1.0","description":"let reason-nact = (node.js, reason, actors) ⇒ your µ services have never been so typed","author":"Nick Cuthbert","license":"Apache-2.0","keywords":["distributed-systems","event sourcing","akka","non-blocking","actor system","akka.net","nact","erlang","actor-model","actors","bucklescript","reason"],"analyzed":"2017-12-23T08:46:29.517Z","updated":"2017-12-23T08:46:29.517Z","stars":34,"score":0.6580437834927451,"quality":0.9598241457920539,"popularity":0.05741868501465412,"maintenance":1,"homepageUrl":"https://github.com/ncthbrt/reason-nact#readme","repositoryUrl":"https://github.com/ncthbrt/reason-nact","npmUrl":"https://www.npmjs.com/package/reason-nact","issuesUrl":"http://github.com/ncthbrt/reason-nact/issues","docsUrl":null,"path":"packages/reason-nact"},{"id":"unpublished/Astrocoders/bs-reason-apollo","filename":"unpublished%2FAstrocoders%2Fbs-reason-apollo.json","type":"unpublished","name":"Astrocoders/bs-reason-apollo","version":"1.0.0-beta.3","description":"Boilerplate for BuckleScript NPM package","author":"Gabriel R. Abreu <grsabreu@gmail.com>","license":"MIT","keywords":["react","graphql","bucklescript","reason","apollo"],"readme":"# bs-reason-apollo\n[![Build Status](https://travis-ci.org/Astrocoders/bs-reason-apollo.svg?branch=master)](https://travis-ci.org/Astrocoders/bs-reason-apollo)\n\nInitially inspired by https://github.com/FormidableLabs/seattlejsconf-app/blob/master/re/types/ReactApollo.re\nBut now with a more sugared usage with function as child.\n\n\n## Difference from reason-apollo official\nThis allows you to use a React Apollo Client that you already have in JS so you can gradually change to Reason.\nSetup the same way you would do for React Apollo and just plug it in.\n\n## Install\n\n```\nyarn add bs-reason-apollo\n```\n\nUpdate your bs-config.json\n```js\n  \"bs-dependencies\": [\"reason-react\", \"bs-reform\", \"bs-reason-apollo\"],\n```\n\n## ReactApollo.CreateWrapper\nAs you have your ApolloProvider somewhere in the top of your React JS tree you are already covered there.\nSo now to use it with Apollo create a query definition module for you query:\n\n```reason\n/* re/SignInQueryGql.re */\nopen BsReasonApollo;\n\nlet query = GraphQLTag.gql({|\n  query SignInQuery {\n    currentUser {\n      id\n      email\n    }\n  }\n|});\n\nmodule Types = {\n  type user = {. \"id\": string, \"email\": string};\n  type error = {. \"message\": string};\n  /* You must always have this data type with loading and error, it's what the HOC gives you */\n  type data = {\n    .\n    \"loading\": Js.boolean,\n    \"error\": Js.null_undefined(error),\n    /* Our response */\n    \"currentUser\": Js.null_undefined(user)\n  };\n};\n\ntype data = Types.data;\n\n/* Define any Js.t variables that you query need here, if you don't use just declare it */\ntype variables;\n\ntype response = Types.user;\n```\n\nNow in your actually component:\n\n```reason\nopen BsReasonApollo;\n\nmodule SignInQueryWrapper = ReactApollo.CreateWrapper(SignInQueryGql);\n\n...\nlet make = (_children) => {\n  ...,\n  render: (_self) =>\n    <SignInQueryWrapper>\n    ...((~data) =>\n        switch (\n          Js.to_bool(data##loading),\n          Js.Null_undefined.to_opt(data##error),\n          Js.Null_undefined.to_opt(data##currentUser)\n        ) {\n        | (true, _, _) => <FullLoading />\n        | (false, _, Some(user)) =>\n          <Welcome user />\n        | (false, Some(error), _) => <Whoops name=error##message />\n        | (false, None, _) =>\n          <KeyboardAwareScrollView>\n            <Wrapper>\n              <Header>\n                <Logo\n                  source=Image.(\n                           Required(Packager.require(\"../../../src/public/img/logo-calendar.png\"))\n                         )\n                />\n              </Header>\n              <ContentWrapper\n                contentContainerStyle=Style.(\n                                        style([\n                                          paddingVertical(Pt(40.)),\n                                          justifyContent(SpaceAround)\n                                        ])\n                                      )>\n                <SignInForm />\n              </ContentWrapper>\n            </Wrapper>\n          </KeyboardAwareScrollView>\n        }\n      )\n    </SignInQueryWrapper>\n}\n```\n\n## ReactApollo.CreateMutationWrapper\n\nDefine the mutation module:\n\n```reason\n/* re/SignInMutationGql.re */\nopen BsReasonApollo;\n\nlet query = GraphQLTag.gql({|\n  mutation SignInQuery($input: SignInInput!) {\n    signIn(input: $input) {\n      error\n      token\n    }\n  }\n|});\n\nmodule Types = {\n  type input = {. \"password\": string, \"email\": string};\n  type signIn = {. \"error\": Js.null_undefined(string), \"token\": Js.null_undefined(string)};\n};\n\n/* Needed for mutations, it'll be probably `variables` in the next release */\ntype input = Types.input;\n\n/* Mutation response */\ntype response = {. \"signIn\": Types.signIn};\n```\n\n```reason\nopen BsReasonApollo;\n\n/* Mutation wrapper */\nmodule SignInMutationWrapper = ReactApollo.CreateMutationWrapper(SignInQueryGql);\n\n/* https://github.com/Astrocoders/reform */\nmodule SignInForm = ReForm.Create(SignInFormParams);\n\nlet convertInputToJs: SignInFormParams.state => SignInMutationGql.Types.signInInput =\n  (values) => {\"password\": values.password, \"email\": values.email};\n\nlet handleSubmit = (mutate, values, setSubmitting) =>\n  values\n  |> convertToJs\n  |> mutate\n  |> Js.Promise.(\n       then_(\n         (payload) =>\n           (\n             switch (Js.Null_undefined.to_opt(payload##signIn##error)) {\n             | Some(error) =>\n               Alert.alert(~title=\"Something went wrong\", ~message=error, ());\n               setSubmitting(false)\n             | None =>\n               RouterActions.home(~actionType=`replace);\n               let _ =\n                 Utils.UserSession.setToken(\n                   Utils.get(Js.Null_undefined.to_opt(payload##signIn##token), \"\")\n                 );\n               ignore()\n             }\n           )\n           |> resolve\n       )\n     )\n  |> ignore;\n\n/* A little abstraction to make function as child composition hurt a bit less */\nlet enhanced = (mapper) => {\n  <SignInMutationWrapper>\n    ...((~mutate) => (\n      <SignInForm\n        initialValues={etc}\n         onSubmit=(\n           (values, ~setSubmitting, ~setError as _) =>\n             handleSubmit(mutate, values, setSubmitting)\n         )\n      >\n        ...mapper\n      </SignInForm>\n    ))\n  </SignInMutationWrapper>\n};\n\nlet component =\n```\n\n## Demo\nWIP\n","analyzed":"2017-12-24T16:47:08.123Z","updated":"2017-12-24T16:47:08.123Z","stars":11,"score":0,"quality":0,"popularity":0,"maintenance":0,"homepageUrl":"https://github.com/Astrocoders/bs-reason-apollo#readme","repositoryUrl":"https://github.com/Astrocoders/bs-reason-apollo","npmUrl":null,"issuesUrl":"https://github.com/Astrocoders/bs-reason-apollo/issues","docsUrl":null,"path":"packages/unpublished/Astrocoders/bs-reason-apollo"},{"id":"unpublished/Astrocoders/reform","filename":"unpublished%2FAstrocoders%2Freform.json","type":"unpublished","name":"Astrocoders/reform","version":"2.0.5","description":"Reasonably making forms sound good again","author":"Gabriel R. Abreu <grsabreu@gmail.com>","license":"MIT","keywords":["form","react","bucklescript","reason"],"readme":"# ReForm.re\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/Astrocoders/reform.svg)](https://greenkeeper.io/)\n[![Build Status](https://travis-ci.org/Astrocoders/reform.svg?branch=master)](https://travis-ci.org/Astrocoders/reform)\n\nReasonably making forms sound good again\n\n## Usage\n\n```reason\nmodule SignInFormParams = {\n  type state = {\n    password: string,\n    email: string\n  };\n  type fields = [ | `password | `email ];\n  let handleChange = (action, state) =>\n    switch action {\n    | (`password, value) => {...state, password: value}\n    | (`email, value) => {...state, email: value}\n    };\n};\n\nmodule SignInForm = ReForm.Create(SignInFormParams);\n\nlet component = ReasonReact.statelessComponent(\"SignIn\");\n\nlet make = (~signInMutation, _children) => {\n  ...component,\n  render: (_) => {\n    let validate: SignInFormParams.state => option(string) = (values) => switch values {\n      | { password: \"12345\" } => Some(\"Sorry, can't do\")\n      | _ => None\n    };\n\n    <SignInForm\n      initialState={password: \"\", email: \"\"}\n      onSubmit=((values, ~setError, ~setSubmitting) => whatever(values, ~setError, ~setSubmitting))\n      validate\n    >\n      ...(\n        (~form, ~handleChange, ~handleSubmit) =>\n          <FormWrapper>\n            <ErrorWarn error=form.error/>\n            <FieldsWrapper>\n              <FormField\n                fieldType=FormField.TextField\n                value=form.values.email\n                placeholder=\"Email\"\n                style=fieldsStyle\n                placeholderTextColor=AppTheme.Colors.blackLight\n                /* handleChange signature is (fields, string) => unit, so you can use right away with RN and React Web.\n                ** Just make an abstraction above to not give it an event and just the value\n                */\n                onChangeText=handleChange(`email)\n              />\n              <FormField\n                fieldType=FormField.TextField\n                placeholder=\"Password\"\n                onChangeText=handleChange(`password)\n                value=form.values.password\n                style=fieldsStyle\n                placeholderTextColor=AppTheme.Colors.blackLight\n              />\n            </FieldsWrapper>\n            <RaisedButton text=\"Sign in\" onPress=handleSubmit/>\n            </FormWrapper>\n      )\n    </SignInForm>\n  }\n}\n```\n","analyzed":"2017-12-24T16:47:08.069Z","updated":"2017-12-24T16:47:08.069Z","stars":20,"score":0,"quality":0,"popularity":0,"maintenance":0,"homepageUrl":"https://github.com/Astrocoders/reform#readme","repositoryUrl":"https://github.com/Astrocoders/reform","npmUrl":null,"issuesUrl":"https://github.com/Astrocoders/reform/issues","docsUrl":null,"path":"packages/unpublished/Astrocoders/reform"},{"id":"unpublished/Astrocoders/restyled","filename":"unpublished%2FAstrocoders%2Frestyled.json","type":"unpublished","name":"Astrocoders/restyled","version":"1.0.1","description":"Boilerplate for BuckleScript NPM package","author":"Gabriel R. Abreu <grsabreu@gmail.com>","license":"MIT","keywords":["css","react","bucklescript","reason","css-in-js"],"readme":"# bs-restyled\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/Astrocoders/restyled.svg)](https://greenkeeper.io/)\n[![Build Status](https://travis-ci.org/Astrocoders/restyled.svg?branch=master)](https://travis-ci.org/Astrocoders/restyled)\n\nStyled Components concept for Reason\n\n## Install\n\n* `yarn add bs-styled`\n* Then add it to your bs-dependencies\n\n```js\n{\n  \"name\": \"myapp\",\n  \"reason\": {\n    \"react-jsx\": 2\n  },\n  \"bs-dependencies\": [\n    \"bs-react-native\",\n    \"reason-react\",\n    \"bs-restyled\"\n  ],\n  \"bsc-flags\": [\"-bs-super-errors\"],\n}\n```\n\n## Usage\n\n```ml\nmodule Wrapper = Styled.View {\n  type styleParams = unit;\n  let style (_) => Style.(style([flex(1), flexDirection(`column), justifyContent(`center)]));\n};\n\nlet component = ReasonReact.statelessComponent(\"MyView\");\n\nlet make = (_children) => {\n  ...component,\n  render: (_self) =>\n    <Wrapper>\n      ...anything else...\n    </Wrapper>\n}\n```\n\nTake a look in the [REStyled.re](https://github.com/Astrocoders/restyled/blob/master/re/REStyled.re) for more\n\n### Acknowledgments\n\nThanks everyone in Reason Discord for pointing me\ndirections and specially to Jared who proposed this\nusage to me here https://gist.github.com/jaredly/a5e0102c060b7a1b40525d41f87843a8\n","analyzed":"2017-12-24T16:47:08.130Z","updated":"2017-12-24T16:47:08.130Z","stars":18,"score":0,"quality":0,"popularity":0,"maintenance":0,"homepageUrl":"https://github.com/Astrocoders/restyled#readme","repositoryUrl":"https://github.com/Astrocoders/restyled","npmUrl":null,"issuesUrl":"https://github.com/Astrocoders/restyled/issues","docsUrl":null,"path":"packages/unpublished/Astrocoders/restyled"},{"id":"unpublished/af/bs-d3","filename":"unpublished%2Faf%2Fbs-d3.json","type":"unpublished","name":"af/bs-d3","version":"0.1.0","description":"Experimental d3 4.x bindings for BuckleScript","license":"MIT","keywords":["reasonml","dataviz","d3js","d3","bucklescript","reason"],"readme":"# bs-d3\n\nWIP [d3](https://github.com/d3/d3) 4.x bindings for [Bucklescript](https://github.com/bucklescript/bucklescript/).\n\nExtremely incomplete and experimental; contributions welcome!\n\n\n## Build\n```\nnpm run build\n```\n\n## Build + Watch\n\n```\nnpm run start\n```\n\n## Current status\n\nd3 has a large [API surface](https://github.com/d3/d3/blob/master/API.md#paths-d3-path), so there's still a lot to do! However, the pieces are already in place to [draw line and area charts](https://github.com/af/bs-d3/blob/master/examples/lineChart.re)\n\nCurrently some of the typings are still quite loose/permissive, if you have any suggestions to tighten them up in an idiomatic OCaml way, please file an issue or PR.\n\n- [x] Axes\n- [x] Arrays (about 50%)\n- [ ] Brushes\n- [ ] Chords\n- [ ] Brushes\n- [ ] Collections\n- [ ] Colors\n- [ ] Dispatches\n- [ ] Dragging\n- [ ] Easings\n- [ ] Forces\n- [ ] Number formatting\n- [ ] Geo\n- [ ] Hierarchies\n- [ ] Interpolators\n- [ ] Paths\n- [ ] Polygons\n- [ ] Quadtrees\n- [x] Scales (partially)\n- [x] Selections (mostly)\n- [x] Shapes (lines & areas only at the moment)\n- [ ] Time Intervals\n- [ ] Timers\n- [ ] Transitions\n- [ ] Voronoi\n- [ ] Zooming\n\n## Known Issues\n\nWhen building this project for the first time, you'll get some \"value x can't be found\" errors in\nthe example files. Just re-build a couple of times and they'll be resolved automatically. If anyone\nknows why this happens, please file an issue or PR!\n","analyzed":"2017-12-24T16:47:07.993Z","updated":"2017-12-24T16:47:07.993Z","stars":5,"score":0,"quality":0,"popularity":0,"maintenance":0,"homepageUrl":"https://github.com/af/bs-d3","repositoryUrl":"https://github.com/af/bs-d3","npmUrl":null,"issuesUrl":"https://github.com/af/bs-d3/issues","docsUrl":null,"path":"packages/unpublished/af/bs-d3"},{"id":"unpublished/aweary/reason-vue","filename":"unpublished%2Faweary%2Freason-vue.json","type":"unpublished","name":"aweary/reason-vue","version":"0.1.0","description":"","license":"MIT","keywords":["bucklescript"],"readme":"# reason-vue\n\nReason bindings to vue.js\n\n\n# Build\n```\nnpm run build\n```\n\n# Build + Watch\n\n```\nnpm run watch\n```\n\n\n# Editor\nIf you use `vscode`, Press `Windows + Shift + B` it will build automatically\n","analyzed":"2017-12-24T16:47:08.123Z","updated":"2017-12-24T16:47:08.123Z","stars":11,"score":0,"quality":0,"popularity":0,"maintenance":0,"repositoryUrl":"https://github.com/aweary/reason-vue","npmUrl":null,"docsUrl":null,"path":"packages/unpublished/aweary/reason-vue"},{"id":"unpublished/freebroccolo/bucklescript-electron","filename":"unpublished%2Ffreebroccolo%2Fbucklescript-electron.json","type":"unpublished","name":"freebroccolo/bucklescript-electron","version":"0.0.0","description":"Electron API for Bucklescript","license":"ISC","keywords":["electron","ocaml","bucklescript"],"readme":"# bucklescript-electron\n\nElectron API for Bucklescript\n\n## Installing\n\n### Prerequisites\n\n* Standard C toolchain\n* `npm`\n\n```\nnpm install\n```\n\n## Running the example\n\n```\nnpm run start    # npm run start:opt (minifies with google closure advanced mode)\n```\n","analyzed":"2017-12-24T16:47:08.126Z","updated":"2017-12-24T16:47:08.126Z","stars":16,"score":0,"quality":0,"popularity":0,"maintenance":0,"homepageUrl":"https://github.com/freebroccolo/bucklescript-electron#readme","repositoryUrl":"https://github.com/freebroccolo/bucklescript-electron","npmUrl":null,"issuesUrl":"https://github.com/freebroccolo/bucklescript-electron/issues","docsUrl":null,"path":"packages/unpublished/freebroccolo/bucklescript-electron"},{"id":"unpublished/glennsl/bs-benchmarkjs","filename":"unpublished%2Fglennsl%2Fbs-benchmarkjs.json","type":"unpublished","name":"glennsl/bs-benchmarkjs","version":"0.1.0","description":"","license":"MIT","keywords":["benchmarking","bucklescript","benchmark.js"],"readme":"\n  # bs-benchmarkjs\n\n  Very very basic bindings to [Benchmark.js](https://benchmarkjs.com/)\n\n  ## Usage\n\n  See [examples](https://github.com/glennsl/bs-benchmarkjs/tree/master/examples)","analyzed":"2017-12-24T16:47:08.114Z","updated":"2017-12-24T16:47:08.114Z","stars":1,"score":0,"quality":0,"popularity":0,"maintenance":0,"homepageUrl":"https://github.com/glennsl/bs-benchmarkjs#readme","repositoryUrl":"https://github.com/glennsl/bs-benchmarkjs","npmUrl":null,"issuesUrl":"https://github.com/glennsl/bs-benchmarkjs/issues","docsUrl":null,"path":"packages/unpublished/glennsl/bs-benchmarkjs"},{"id":"unpublished/glennsl/bs-revamp","filename":"unpublished%2Fglennsl%2Fbs-revamp.json","type":"unpublished","name":"glennsl/bs-revamp","version":"0.1.0","description":"","author":"glennsl","license":"MIT","keywords":["regex","bucklescript","regular expressions","reason"],"readme":"\n# bs-re:vamp\n\nAn experimental safe and functional API for JavaScript regexes\n\n## Example\n\n```reason\nlet () =\n  \"baNAna\" |> Revamp.matches \"(na)+\" flags::[Revamp.IgnoreCase]\n           |> Sequence.forEach (fun m => Js.log m);\n```\n\n## Goals\n\n* A sane, safe API\n* Low performance overhead (secondary)\n\n## Non-goals\n\n* Full feature parity\n\n","analyzed":"2017-12-24T16:47:08.128Z","updated":"2017-12-24T16:47:08.128Z","stars":3,"score":0,"quality":0,"popularity":0,"maintenance":0,"homepageUrl":"https://github.com/glennsl/bs-revamp#readme","repositoryUrl":"https://github.com/glennsl/bs-revamp","npmUrl":null,"issuesUrl":"https://github.com/glennsl/bs-revamp/issues","docsUrl":null,"path":"packages/unpublished/glennsl/bs-revamp"},{"id":"unpublished/glennsl/quickiecheck","filename":"unpublished%2Fglennsl%2Fquickiecheck.json","type":"unpublished","name":"glennsl/quickiecheck","version":"0.0.1","description":"Quickcheck implementation for BuckleScript","author":"glennsl","license":"MIT","keywords":["test","property-based testing","quickcheck","bucklescript"],"readme":"# Quickiecheck - an experimental BuckleScript quickcheck implementation\n\nAlternative name: \"recheck\"\n\nWhy make another quickcheck implementation when there are already `n` implementations for OCaml?\n\n1. Because BuckleScript targeting JavaScript means you can do _evil_ things.\n2. Because I wanted an API that could easily integrate with `bs-jest` (or whichever test runner you'd prefer)\n","analyzed":"2017-12-24T16:47:08.129Z","updated":"2017-12-24T16:47:08.129Z","stars":2,"score":0,"quality":0,"popularity":0,"maintenance":0,"homepageUrl":"https://github.com/glennsl/quickiecheck#readme","repositoryUrl":"https://github.com/glennsl/quickiecheck","npmUrl":null,"issuesUrl":"https://github.com/glennsl/quickiecheck/issues","docsUrl":null,"path":"packages/unpublished/glennsl/quickiecheck"},{"id":"unpublished/glennsl/refetch","filename":"unpublished%2Fglennsl%2Frefetch.json","type":"unpublished","name":"glennsl/refetch","version":"0.1.0","description":"","license":"MIT","keywords":["http","fetch","bucklescript","ajax"],"readme":"# refetch\n\nRefetch is a strongly typed and immutable API built on top of the `fetch` standard. It is also incomplete, highly experimental and prone to change.\n\n## Example\n\n```reason\n/* Simple GET */\nResync.(Refetch.(\n  get(\"http://httpbin.org/get\")\n  |> Future.flatMap(\n     fun | Response.Ok(_, response) => Response.text(response)\n         | _ => \"oops!\" |> Future.from)\n  |> Future.whenResolved(Js.log)\n));\n\n/* builder functions */\nResync.(Refetch.(\n  request(`POST, \"https://httpbin.org/post\")\n    |> Request.header(`ContentType(\"application/x-www-form-urlencoded; charset=UTF-8\"))\n    |> Request.payload(`String(\"title=foobar&body=bar&userId=1\"))\n  |> fetch\n    |> Future.flatMap(\n        fun | Response.Ok(_, response) => Response.text(response)\n            | Response.Error({ reason }, _) => Future.from(reason))\n    |> Future.whenResolved(Js.log)\n));\n\n/* labeled arguments */\nResync.(Refetch.(\n  request(`POST, \"https://httpbin.org/post\",\n    ~headers=[`ContentType(\"application/x-www-form-urlencoded; charset=UTF-8\")],\n    ~body=`String(\"title=foobar&body=bar&userId=1\"))\n  |> fetch\n    |> Future.flatMap(\n        fun | Response.Ok(_, response) => Response.text(response)\n            | Response.Error({ reason }, _) => Future.from(reason))\n    |> Future.whenResolved(Js.log)\n));\n```","analyzed":"2017-12-24T16:47:08.125Z","updated":"2017-12-24T16:47:08.125Z","stars":8,"score":0,"quality":0,"popularity":0,"maintenance":0,"homepageUrl":"https://github.com/glennsl/refetch#readme","repositoryUrl":"https://github.com/glennsl/refetch","npmUrl":null,"issuesUrl":"https://github.com/glennsl/refetch/issues","docsUrl":null,"path":"packages/unpublished/glennsl/refetch"},{"id":"unpublished/reasonml-community/bs-discord.js","filename":"unpublished%2Freasonml-community%2Fbs-discord.js.json","type":"unpublished","name":"reasonml-community/bs-discord.js","version":"0.1.0","description":"BuckleScript bindings for discord.js","author":"","license":"MIT","keywords":["discord","bucklescript","discord.js"],"readme":"# bs-discord.js\nBuckleScript bindings for [discord.js](https://www.npmjs.com/package/discord.js)\n","analyzed":"2017-12-24T16:47:08.111Z","updated":"2017-12-24T16:47:08.111Z","stars":4,"score":0,"quality":0,"popularity":0,"maintenance":0,"homepageUrl":"https://github.com/BuckleTypes/bs-discord.js#readme","repositoryUrl":"https://github.com/reasonml-community/bs-discord.js","npmUrl":null,"issuesUrl":"https://github.com/BuckleTypes/bs-discord.js/issues","docsUrl":null,"path":"packages/unpublished/reasonml-community/bs-discord.js"},{"id":"unpublished/reasonml-community/bs-glob","filename":"unpublished%2Freasonml-community%2Fbs-glob.json","type":"unpublished","name":"reasonml-community/bs-glob","version":"0.1.0","description":"","author":"glennsl","license":"MIT","keywords":["glob","bucklescript"],"readme":"\n# bs-glob\n\nBuckleScript bindings to [node-glob](https://github.com/isaacs/node-glob).\n\nStatus: Very basic, but functional\n\n## Example\n\n```ml\n(* OCaml *)\nGlob.glob \"**/*.js\" (fun _ files -> Array.iter Js.log files)\n```\n\n```reason\n/* Reason */\nGlob.glob(\"**/*.js\", (_, files) => Array.iter(Js.log, files));\n```\n\n## Installation\n\n```sh\nnpm install --save reasonml-community/bs-glob\n```\n\nThen add `bs-glob` to `bs-dependencies` in your `bsconfig.json`:\n```js\n{\n  ...\n  \"bs-dependencies\": [\"bs-glob\"]\n}\n```\n","analyzed":"2017-12-24T16:47:08.090Z","updated":"2017-12-24T16:47:08.090Z","stars":0,"score":0,"quality":0,"popularity":0,"maintenance":0,"homepageUrl":"https://github.com/reasonml-community/bs-glob#readme","repositoryUrl":"https://github.com/reasonml-community/bs-glob","npmUrl":null,"issuesUrl":"https://github.com/reasonml-community/bs-glob/issues","docsUrl":null,"path":"packages/unpublished/reasonml-community/bs-glob"},{"id":"unpublished/reasonml-community/bs-immutablejs","filename":"unpublished%2Freasonml-community%2Fbs-immutablejs.json","type":"unpublished","name":"reasonml-community/bs-immutablejs","version":"0.0.1","description":"Reason + BuckleScript bindings to Immutable.js","author":"","license":"MIT","keywords":["immutable","data","data structures","persistent","bucklescript","reason"],"readme":"# bs-immutablejs\n\n**Note**: these are **bindings** to the [Immutable.js](https://facebook.github.io/immutable-js/) library. These are only meant to be used to interoperate with existing JavaScript code; In Reason/BS, we have more lightweight immutable (and optionally mutable) data structures by default (list, record, hashmap, set, and upcoming data structures). New Reason/BS projects projects don't need bs-immutablejs.\n\n## Documentation\n\nThe source is a [single file](https://github.com/reasonml-community/bs-immutablejs/blob/master/src/immJsRe.re) of BuckleScript `external`s. The API corresponds to Immutable.js' API.\n\nExample usage:\n\n```reason\nlet greeting = ImmutableJsRe.List.fromArray([|\"hello\", \"world\"|]);\n\nlet extendedGreeting = ImmutableJsRe.List.push(\"how are you\", greeting);\n\nlet reallyExtendedGreeting =\n  ImmutableJsRe.List.(\n    extendedGreeting |> push(\"I'm fine\") |> push(\"thank you\") |> push(\"and you?\")\n  );\n```\n\nGenerated code:\n\n```js\nvar greeting = Immutable.List(/* array */[\n      \"hello\",\n      \"world\"\n    ]);\nvar extendedGreeting = greeting.push(\"how are you\");\nextendedGreeting.push(\"I'm fine\").push(\"thank you\").push(\"and you?\");\n```\n\n## Transitioning to Idiomatic Reason/BuckleScript Data Structures\n\nHere's a table of Immutable.js data structures and their Reason/BuckleScript equivalents. Reason/BS provide the data structures out of the box.\n\nImmutable.js | Reason/BuckleScript\n----|-----\nList | List\nMap | Map\nOrderedMap | Nothing yet\nSet | Set\nOrderedSet | Nothing yet\nStack | List\nRecord | Record\nSeq | Use `lazy`\n\n## Contributing\n\nPrerequisite: `https://github.com/reasonml/reason-cli`.\n\n```\ngit clone https://github.com/BuckleTypes/bs-immutablejs.git\ncd bs-immutablejs\nnpm install\nnpm start\n```\n","analyzed":"2017-12-24T16:47:08.123Z","updated":"2017-12-24T16:47:08.123Z","stars":19,"score":0,"quality":0,"popularity":0,"maintenance":0,"homepageUrl":"https://github.com/reasonml-community/bs-immutablejs#readme","repositoryUrl":"https://github.com/reasonml-community/bs-immutablejs","npmUrl":null,"issuesUrl":"https://github.com/reasonml-community/bs-immutablejs/issues","docsUrl":null,"path":"packages/unpublished/reasonml-community/bs-immutablejs"},{"id":"unpublished/reasonml-community/bs-leaflet","filename":"unpublished%2Freasonml-community%2Fbs-leaflet.json","type":"unpublished","name":"reasonml-community/bs-leaflet","version":"0.0.1","description":"BuckleScript bindings for Leaflet.js","author":"Jiayu Liu <jimexist@gmail.com>","license":"MIT","keywords":["gis","map","bucklescript"],"readme":"# bs-leaflet\n\nWarning: 🚧 WIP\n\nBuckleScript bindings for [Leaflet.js](http://leafletjs.com/)\n","analyzed":"2017-12-24T16:47:08.110Z","updated":"2017-12-24T16:47:08.110Z","stars":1,"score":0,"quality":0,"popularity":0,"maintenance":0,"homepageUrl":"https://github.com/reasonml-community/bs-leaflet#readme","repositoryUrl":"https://github.com/reasonml-community/bs-leaflet","npmUrl":null,"issuesUrl":"https://github.com/reasonml-community/bs-leaflet/issues","docsUrl":null,"path":"packages/unpublished/reasonml-community/bs-leaflet"},{"id":"unpublished/reasonml-community/bs-transit-js","filename":"unpublished%2Freasonml-community%2Fbs-transit-js.json","type":"unpublished","name":"reasonml-community/bs-transit-js","version":"0.0.1","description":"BuckleScript bindings for transit-js","keywords":["cqrs","bucklescript","reason"],"readme":"# Transit-js Bucklescript bindings #\n\nMake client-server communication great again.\n\nThis repo provides rudimentary bindings to transit-js with Bucklescript,\nprototyped in under 15min. thanks to Bucklescript compiling at the speed of light.\n\nJson is nice, but I want to send records and variants (among other things) straight over\nthe wire. Feels like a shame to lose all that information & type everything as js objects.\nSince transit provides a way to encode/decode custom data, it seemed like\na good fit for encoding ml types. If this thing works out, I'll look into automating\neverything with ppx.\n\nHead over to `src/example.re` to get up & running ASAP.\n","analyzed":"2017-12-24T16:47:08.126Z","updated":"2017-12-24T16:47:08.126Z","stars":7,"score":0,"quality":0,"popularity":0,"maintenance":0,"homepageUrl":"https://github.com/BuckleTypes/bs-transit-js","repositoryUrl":"https://github.com/reasonml-community/bs-transit-js","npmUrl":null,"docsUrl":null,"path":"packages/unpublished/reasonml-community/bs-transit-js"},{"id":"unpublished/state-machine-systems/JsonCodec","filename":"unpublished%2Fstate-machine-systems%2FJsonCodec.json","type":"unpublished","name":"state-machine-systems/JsonCodec","version":"0.1.0","description":"","license":"Apache-2.0","keywords":["json","bucklescript","reason"],"readme":"# JsonCodec\n\n## JSON combinator library for BuckleScript/Reason\n\nUsing the magic of [pickler combinators](https://www.microsoft.com/en-us/research/wp-content/uploads/2004/01/picklercombinators.pdf), this library allows you to parse and serialize JSON structures in a declarative way, free of boilerplate.\n\nHere's a little example:\n\n```reason\nlet json = {js|\n{\n    \"name\": \"Great Pyramid of Giza\",\n    \"lat\": 29.979175,\n    \"lon\": 31.134358,\n    \"height\": 146.5\n}\n|js};\n\n/* Define a codec for the above object type */\nlet codec =\n  JsonCodec.(\n    object4\n      (field \"name\" string) (field \"lat\" number) (field \"long\" number) (field \"height\" number)\n  );\n\n/* Decoding */\nlet () =\n  switch (JsonCodec.decodeJson codec json) {\n  | Js.Result.Ok (name, lat, lon, height) =>\n    Printf.printf \"name='%s' location=%f,%f height=%f\\n\" name lat lon height\n  | Js.Result.Error error => Printf.printf \"Decoding error: %s\" error\n  };\n\n/* Encoding */\nlet encoded = JsonCodec.encodeJson codec (\"Machu Picchu\", -13.163333, -72.545556, 2430.0);\n\nlet () = Printf.printf \"JSON: %s\\n\" encoded;\n```\n\n\n&copy; 2017 State Machine Systems Ltd. [Apache Licence, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0)","analyzed":"2017-12-24T16:47:08.130Z","updated":"2017-12-24T16:47:08.130Z","stars":7,"score":0,"quality":0,"popularity":0,"maintenance":0,"repositoryUrl":"https://github.com/state-machine-systems/JsonCodec","npmUrl":null,"docsUrl":null,"path":"packages/unpublished/state-machine-systems/JsonCodec"},{"id":"unpublished/szymonzmyslony/reason-react-native-navigation","filename":"unpublished%2Fszymonzmyslony%2Freason-react-native-navigation.json","type":"unpublished","name":"szymonzmyslony/reason-react-native-navigation","version":"0.1.0","description":"","author":"","license":"MIT","keywords":["reasonml","react-native","bucklescript","navigation","reason"],"readme":"# reason-react-native-navigation\nThis is a simple react native navigation written in reason. It has been created with an eye to fully utilize Reason type-system. \nCurrently, only stack-navigation (standard slide from left for iOS and slide from button from Android) is implemented.\nMain problem that we are trying to solve with this is passing props to child components in a straightforward and type-safe way.\n\n## How does it look like?\nThe example app is avaialble at https://github.com/szymonzmyslony/reason-react-native-navigation-exampleApp\n\n\nThis is how this example app looks like:\n![Switch between screens](reason-navigation.gif)\n\nAs you can see the count update (state of the root component) doesn't get rerendered when you click increment or decrement on the second screen. This is the first issue that I will be working on solving.\n\n\n## How to use it (when you want to have a full control over your navigation state)?\nStackNavigator is a functor that expects one type for your navigationState variant:\n```reason\nmodule type Impl = {\n  type navigationState;\n};\n```\n\nThis is how you create a functor:\n\n```reason\nmodule StackNavigator =\n  StackNavigator.Make {\n    type navigationState = screen;\n  };\n```\n\nFor example, in my simple app, I had:\n```reason\ntype screen =\n  | Login\n  | MainScreen\n  | Player int string;\n\n```\nStackNavigator requires navigation state to be managed by parent component. Thus, we need to pass \nnavigation state, pop, and push methods, and two render functions (header and screen). This is how root render in my app looks\nlike:\n```reason\n render: fun {state, update, handle} =>\n    ReasonReact.element @@\n    StackNavigator.make\n      navigationState::state.navigationState\n      goBack::(update pop)\n      getHeaderConfig::headerTitle\n      render::(\n        renderScreen\n          ::handle\n          pop::(update pop)\n          push::(update push)\n          updateProjects::(update updateProjects)\n          projects::state.projects\n      )\n```      \nrenderScreen and render can take any arguments needed from the root of the app and pass it down to other screens:\n```reason\nlet renderScreen\n    pop::(pop: 'a => unit)\n    push::(push: screen => unit)\n    ::projects\n    ::handle\n    ::updateProjects\n    screen =>\n  switch screen {\n  | Login => ReasonReact.element @@ LoginScreen.make ()\n  | Player index _id => DetailViewProject.render project::(List.nth projects index)\n  | MainScreen =>\n    ReasonReact.element @@ MainScreenContainer.make ::push ::updateProjects ::projects\n  };\n\nlet headerTitle screen =>\n  switch screen {\n  | MainScreen => \"Shows\"\n  | _ => \"test\"\n  };\n  ```\n\n  New StatefullStackNavigator module avoid boilerplate for push and pop actions. \n  The example app (https://github.com/szymonzmyslony/reason-react-native-navigation-exampleApp)\n  is showing how to use it. \n\n\n\n","analyzed":"2017-12-24T16:47:08.088Z","updated":"2017-12-24T16:47:08.088Z","stars":20,"score":0,"quality":0,"popularity":0,"maintenance":0,"repositoryUrl":"https://github.com/szymonzmyslony/reason-react-native-navigation","npmUrl":null,"docsUrl":null,"path":"packages/unpublished/szymonzmyslony/reason-react-native-navigation"},{"id":"unpublished/threepointone/bs-nice","filename":"unpublished%2Fthreepointone%2Fbs-nice.json","type":"unpublished","name":"threepointone/bs-nice","version":"0.1.0","description":"css-in-reason","license":"MIT","keywords":["css","bucklescript","reason"],"readme":"(work in progress)\n\n## nice\n\ncss-in-reason. just because.\n\n```reason\nopen Nice;\n\nlet className = css([\n  Display(Flex),\n  AlignItems(Center),\n  Color(Red),\n  Select(\":hover\", [Color(Blue)])\n]);\n```\n\n## some nice features\n\n* pure reason\n* typed css\n* glamor-style composition\n* escape hatch - `Raw(key, value)`\n\n## todo\n\n* keyframes / animations\n* font-faces\n* vendor prefixing\n* better types\n* ~ hot reloading\n* 'server' side\n* benchmarks / tests\n","analyzed":"2017-12-24T16:47:08.127Z","updated":"2017-12-24T16:47:08.127Z","stars":79,"score":0,"quality":0,"popularity":0,"maintenance":0,"homepageUrl":"https://github.com/threepointone/bs-nice#readme","repositoryUrl":"https://github.com/threepointone/bs-nice","npmUrl":null,"issuesUrl":"https://github.com/threepointone/bs-nice/issues","docsUrl":null,"path":"packages/unpublished/threepointone/bs-nice"},{"id":"unpublished/wokalski/vow","filename":"unpublished%2Fwokalski%2Fvow.json","type":"unpublished","name":"wokalski/vow","version":"0.0.2","description":"Almost sound Promises for Bucklescript","license":"MIT","keywords":["promise","bucklescript","reason"],"readme":"# Vow\n\n`Vow` is a tiny library which allows you to handle promises more safely in your Bucklescript application.\n\nA `Vow` can be either `handled` and `unhandled`. All promises of type `vow 'a handled` make sure that you handled Promise rejections. Thanks to that you will avoid the Uncaught promise error.\n\n## Side effects\n\nAfter series of operations you usually want to \"consume\" a promise. `Vow.sideEffect` should be used for that.\n\nIt only accepts promises which are properly handled.\n\n## Unwrapping\n\nYou can unwrap a handled promise using `Vow.unwrap`.\n\n## Nesting vows\n\n`Js.Promise.t` is unsafe when you nest promises. i.e. `Js.Promise.t (Js.Promise.t 'a)` is unsound. In the runtime it's `Js.Promise.t`.\n\nThis is resolved with `vow`s. If you nest `vow`s they behave as expected.\n\nHowever if you put a `Js.Promise.t` inside a `vow` (which are boxed `Js.Promise.t` under the scenes) you're gonna get a `vow` of the following type:\n\n```reason\n/* in Reason syntax */\n\nvow (Js.Promise.t 'a) 'status\n```\nHowever, under the scenes it'll really be\n\n```reason\n\nvow 'a 'status\n```\n\nTherefore `vow` is not sound.\n\n## Binding\n\nIn order to use vows you have to bind to your existing APIs using `Vow.wrap`/`Vow.unsafeWrap`.\n\nIf you `unsafeWrap` a promise which does throw your code will be unsound.\n\n## Example\n\nLet's see a real world example of vows with some comments:\n\n```reason\nlet login _: Vow.Result.t authenticationState error Vow.handled =>\n  /* Returns a handled Vow.Result.t */\n  Login.logIn () |>\n  /* Validates the returned value. Since the vow is handled we don't need to catch*/\n  Vow.Result.map (\n    fun x =>\n      if x##isCancelled {\n        Vow.Result.fail LoginRequestCancelled\n      } else {\n        Vow.Result.return ()\n      }\n  ) |>\n  /* Another handled Vow.Result.t */\n  Vow.Result.map Login.getCurrentAccessToken () |>\n  Vow.Result.map (\n    fun x => {\n      let token = x##accessToken;\n      /* This returns an unhandled Vow.Result.t.\n       * Note that the 'error types have to match\n       * Because after one error the subsequent operations\n       * Are not performed.\n       */\n      Queries.login ::token\n    }\n  ) |>\n  /* Ooops, the `Queries.login` might reject.\n   * We are forced to handle it in the compile time.\n   */\n  Vow.Result.onError (fun _ => Vow.Result.fail GraphQlSignInError) |>\n  Vow.Result.map (\n    fun x =>\n      switch x {\n      | Authenticated {token, userId} =>\n        /* The promise we wrap is never rejected */\n        Vow.unsafeWrap\n          KeyChain.(\n            Js.Promise.all2 (\n              setGenericPassword username::\"userId\" password::userId service::\"userId\",\n              setGenericPassword username::\"token\" password::token service::\"token\"\n            )\n          ) |>\n        Vow.map (fun _ => Vow.Result.return x)\n      | _ => Vow.Result.return x\n      }\n  );\n```\n\n## Author\n\n[@wokalski](http://twitter.com/wokalski) \n\n","analyzed":"2017-12-24T16:47:08.129Z","updated":"2017-12-24T16:47:08.129Z","stars":31,"score":0,"quality":0,"popularity":0,"maintenance":0,"homepageUrl":"https://github.com/wokalski/vow#readme","repositoryUrl":"https://github.com/wokalski/vow","npmUrl":null,"issuesUrl":"https://github.com/wokalski/vow/issues","docsUrl":null,"path":"packages/unpublished/wokalski/vow"},{"id":"unpublished/zploskey/bs-puppeteer","filename":"unpublished%2Fzploskey%2Fbs-puppeteer.json","type":"unpublished","name":"zploskey/bs-puppeteer","version":"0.1.0","description":"","author":"Zach Ploskey <zach@ploskey.com>","license":"MIT","keywords":["browser","headless","scraping","puppeteer","bucklescript"],"readme":"# bs-puppeteer\n\nBucklescript bindings to Headless Chrome AKA\n[Puppeteer](https://github.com/GoogleChrome/puppeteer)\nwritten in\n[Reason](https://reasonml.github.io).\nThey are a work in progress, and most features of probably don't work yet.\nThe initial goal is to at least get basic web-scraping capabilities.\nSee `examples` for use cases that are being tested.\nContributions are welcome.\n\n# Build\n```\nnpm run build\n```\n\n# Build + Watch\n```\nnpm run start\n```\n","analyzed":"2017-12-24T16:47:08.130Z","updated":"2017-12-24T16:47:08.130Z","stars":2,"score":0,"quality":0,"popularity":0,"maintenance":0,"repositoryUrl":"https://github.com/zploskey/bs-puppeteer","npmUrl":null,"issuesUrl":"https://github.com/zploskey/bs-puppeteer/issues","docsUrl":null,"path":"packages/unpublished/zploskey/bs-puppeteer"}]}