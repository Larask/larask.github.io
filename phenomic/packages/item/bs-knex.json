{"filename":"bs-knex.json","type":"published","id":"bs-knex","name":"bs-knex","version":"0.2.1","description":"BuckleScript interface to the node 'knex' library","author":"Brandon Konkle","license":"BSD-2-Clause","keywords":["knex","sql","database","node","bucklescript","reason"],"analyzed":"2017-12-19T04:44:23.862Z","updated":"2017-12-19T04:44:23.862Z","stars":0,"score":0.4898424412442207,"quality":0.4404449708819793,"popularity":0.02203040569397734,"maintenance":0.9999951656763855,"homepageUrl":"https://github.com/ecliptic/bucklescript-tools#readme","repositoryUrl":"https://github.com/ecliptic/bucklescript-tools","npmUrl":"https://www.npmjs.com/package/bs-knex","issuesUrl":"https://github.com/ecliptic/bucklescript-tools/issues","docsUrl":null,"path":"packages/bs-knex","body":"<h1 id=\"bs-knex\"><a aria-hidden=\"true\" href=\"#bs-knex\"><span class=\"icon icon-link\"></span></a>bs-knex</h1>\n<p>BuckleScript utilities for working with the Node <a href=\"http://knexjs.org/\">knex</a> library.</p>\n<h2 id=\"example\"><a aria-hidden=\"true\" href=\"#example\"><span class=\"icon icon-link\"></span></a>Example</h2>\n<pre><code class=\"hljs language-reason\">let knex = Knex.make({\n  <span class=\"hljs-string\">\"client\"</span>: <span class=\"hljs-string\">\"pg\"</span>,\n  <span class=\"hljs-string\">\"connection\"</span>: {\n    <span class=\"hljs-string\">\"user\"</span>: Config.Database.username,\n    <span class=\"hljs-string\">\"password\"</span>: Config.Database.password,\n    <span class=\"hljs-string\">\"host\"</span>: Config.Database.hostname,\n    <span class=\"hljs-string\">\"port\"</span>: Config.Database.port,\n    <span class=\"hljs-string\">\"database\"</span>: Config.Database.name\n  },\n  <span class=\"hljs-string\">\"pool\"</span>: {\n    <span class=\"hljs-string\">\"min\"</span>: Config.Database.poolMin,\n    <span class=\"hljs-string\">\"max\"</span>: Config.Database.poolMax,\n    <span class=\"hljs-string\">\"idleTimeoutMillis\"</span>: Config.Database.poolIdle\n  },\n  <span class=\"hljs-string\">\"acquireConnectionTimeout\"</span>: 2000\n});\n\nlet<span class=\"hljs-built_in\"> users </span>= [@bs] knex(<span class=\"hljs-string\">\"users\"</span>, Js.Nullable.<span class=\"hljs-literal\">null</span>);\n<span class=\"hljs-built_in\">\nusers\n</span>  |> insert({\n        <span class=\"hljs-string\">\"user_name\"</span>: user##userName,\n        <span class=\"hljs-string\">\"display_name\"</span>: user##displayName,\n        <span class=\"hljs-string\">\"email\"</span>: user##email\n      })\n  |> returning(<span class=\"hljs-string\">\"*\"</span>)\n  |> toPromise\n  |> then_(handleResponse(~<span class=\"hljs-attribute\">error</span>=<span class=\"hljs-string\">\"Unable to add User.\"</span>))\n  |> then_(pickFirst)\n  |> handleUniqueError(\n        ~<span class=\"hljs-attribute\">name</span>=<span class=\"hljs-string\">\"users_email_unique\"</span>,\n        ~<span class=\"hljs-attribute\">message</span>=<span class=\"hljs-string\">\"That email address is already in use.\"</span>\n      )\n  |> handleUniqueError(\n        ~<span class=\"hljs-attribute\">name</span>=<span class=\"hljs-string\">\"users_user_name_unique\"</span>,\n        ~<span class=\"hljs-attribute\">message</span>=<span class=\"hljs-string\">\"That user name is already in use.\"</span>\n      )\n  |> handleDbErrors;</code></pre>"}