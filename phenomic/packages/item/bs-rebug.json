{"filename":"bs-rebug.json","type":"published","id":"bs-rebug","name":"bs-rebug","version":"0.2.1","description":"Originally a port of [debug](https://github.com/visionmedia/debug) to BuckleScript, but has since expanded a bit.","author":"glennsl","license":"MIT","keywords":["bucklescript","debug"],"analyzed":"2017-12-17T14:02:15.043Z","updated":"2017-12-17T14:02:15.043Z","score":0.24344298637690448,"quality":0.41167083833848434,"popularity":0.00956484094583832,"maintenance":0.3331258301266165,"npmUrl":"https://www.npmjs.com/package/bs-rebug","docsUrl":null,"path":"packages/bs-rebug","body":"<h1 id=\"rebug\"><a aria-hidden=\"true\" href=\"#rebug\"><span class=\"icon icon-link\"></span></a>rebug</h1>\n<p>Originally a port of <a href=\"https://github.com/visionmedia/debug\">debug</a> to BuckleScript, but has since expanded a bit.</p>\n<h2 id=\"status\"><a aria-hidden=\"true\" href=\"#status\"><span class=\"icon icon-link\"></span></a>Status</h2>\n<ul>\n<li>Browser back-end has been implemented, Node.js back-end has not</li>\n<li>Formatting isn't properly supported yet</li>\n<li>Colors are always on</li>\n<li>Isn't quite as customizable (yet)</li>\n</ul>\n<h2 id=\"example\"><a aria-hidden=\"true\" href=\"#example\"><span class=\"icon icon-link\"></span></a>Example</h2>\n<pre><code class=\"hljs language-reason\"><span class=\"hljs-comment\">/* Reason */</span>\n\n<span class=\"hljs-comment\">/* creates a logger with the given namespace */</span>\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\">debug</span> = <span class=\"hljs-keyword\">Debug</span>.<span class=\"hljs-built_in\">make</span>(<span class=\"hljs-string\">\"my:namespace\"</span>);\n\n<span class=\"hljs-comment\">/* debug.log* logs the message only if the namespace of the logger is enabled */</span>\n<span class=\"hljs-keyword\">debug</span>.log1(<span class=\"hljs-string\">\"The red cow jumps over the lazy giraffe\"</span>);\n\n<span class=\"hljs-comment\">/* debug.error* will log the message regardless of whether the namespace is\n   enabled, format it as an error and include a stack trace */</span>\ntry (...) {\n| <span class=\"hljs-built_in\">error</span> => a.error2(<span class=\"hljs-string\">\"Error occurred while doing stuff: \"</span>, <span class=\"hljs-built_in\">error</span>)\n};\n\n<span class=\"hljs-comment\">/* debug.fn* groups any log output during its execution, and logs the arguments\n   passed to and the value returned from the function */</span>\n<span class=\"hljs-keyword\">let</span> loggedParse = <span class=\"hljs-keyword\">debug</span>.fn1(<span class=\"hljs-string\">\"JSON.parse\"</span>, Js.Json.parseExn);</code></pre>\n<p>See <a href=\"https://github.com/glennsl/rebug/blob/master/examples/\">examples</a> for more.</p>\n<h2 id=\"installation\"><a aria-hidden=\"true\" href=\"#installation\"><span class=\"icon icon-link\"></span></a>Installation</h2>\n<pre><code class=\"hljs language-sh\">npm install --save bs-rebug</code></pre>\n<p>Then add <code>bs-rebug</code> to <code>bs-dependencies</code> in your <code>bsconfig.json</code>:</p>\n<pre><code class=\"hljs language-js\">{\n  ...\n  <span class=\"hljs-string\">\"bs-dependencies\"</span>: [<span class=\"hljs-string\">\"bs-rebug\"</span>]\n}</code></pre>"}