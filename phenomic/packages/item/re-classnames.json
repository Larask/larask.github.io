{"filename":"re-classnames.json","type":"published","id":"re-classnames","name":"re-classnames","version":"0.0.3","description":"Simple reimplementation of classnames in ReasonML","author":"Alex Fedoseev","license":"MIT","keywords":["reason-react","react","classnames","ocaml","bucklescript","reason"],"analyzed":"2017-12-20T03:32:51.127Z","updated":"2017-12-20T03:32:51.127Z","stars":3,"score":0.5866757411724892,"quality":0.7582138297588854,"popularity":0.03207534555030289,"maintenance":0.9942434894349077,"homepageUrl":"https://github.com/alexfedoseev/re-classnames#readme","repositoryUrl":"https://github.com/alexfedoseev/re-classnames","npmUrl":"https://www.npmjs.com/package/re-classnames","issuesUrl":"https://github.com/alexfedoseev/re-classnames/issues","docsUrl":null,"path":"packages/re-classnames","body":"<h1 id=\"re-classnames\"><a aria-hidden=\"true\" href=\"#re-classnames\"><span class=\"icon icon-link\"></span></a>re-classnames</h1>\n<p>Simple reimplementation of <a href=\"https://github.com/JedWatson/classnames\">classnames</a> in <a href=\"https://reasonml.github.io\">ReasonML</a>.</p>\n<h2 id=\"installation\"><a aria-hidden=\"true\" href=\"#installation\"><span class=\"icon icon-link\"></span></a>Installation</h2>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> yarn / npm</span>\nyarn add re-classnames\nnpm install --save re-classnames</code></pre>\n<h2 id=\"usage\"><a aria-hidden=\"true\" href=\"#usage\"><span class=\"icon icon-link\"></span></a>Usage</h2>\n<pre><code class=\"hljs language-reason\">Cn.make([<span class=\"hljs-string\">\"one\"</span>, <span class=\"hljs-string\">\"two\"</span>]) /* => <span class=\"hljs-string\">\"one two\"</span> */</code></pre>\n<h3 id=\"cnifbool\"><a aria-hidden=\"true\" href=\"#cnifbool\"><span class=\"icon icon-link\"></span></a><code>Cn.ifBool</code></h3>\n<pre><code class=\"hljs language-reason\">Cn.make([<span class=\"hljs-string\">\"one\"</span>, <span class=\"hljs-string\">\"two\"</span> |<span class=\"hljs-type\">> Cn</span>.ifBool(true)]) /* => <span class=\"hljs-string\">\"one two\"</span> */\nCn.make([<span class=\"hljs-string\">\"one\"</span>, <span class=\"hljs-string\">\"two\"</span> |<span class=\"hljs-type\">> Cn</span>.ifBool(false)]) /* => <span class=\"hljs-string\">\"one\"</span> */</code></pre>\n<h3 id=\"cnifopt\"><a aria-hidden=\"true\" href=\"#cnifopt\"><span class=\"icon icon-link\"></span></a><code>Cn.ifOpt</code></h3>\n<pre><code class=\"hljs language-reason\">/* Cn.ifOpt */\nCn.make([<span class=\"hljs-string\">\"one\"</span>, Some(<span class=\"hljs-string\">\"two\"</span>) |<span class=\"hljs-type\">> Cn</span>.ifOpt]) /* => <span class=\"hljs-string\">\"one two\"</span> */\nCn.make([<span class=\"hljs-string\">\"one\"</span>, None |<span class=\"hljs-type\">> Cn</span>.ifOpt]) /* => <span class=\"hljs-string\">\"one\"</span> */</code></pre>\n<h3 id=\"cnmapopt\"><a aria-hidden=\"true\" href=\"#cnmapopt\"><span class=\"icon icon-link\"></span></a><code>Cn.mapOpt</code></h3>\n<pre><code class=\"hljs language-reason\">type t =\n  | <span class=\"hljs-type\">One</span>\n  | <span class=\"hljs-type\">Two</span>\n  | <span class=\"hljs-type\">Tree</span>;\n\nCn.make([\n  <span class=\"hljs-string\">\"one\"</span>,\n  Cn.mapOpt(\n    Some(Two),\n    (v) =>\n      switch v {\n      | <span class=\"hljs-type\">One</span> => <span class=\"hljs-string\">\"one\"</span>\n      | <span class=\"hljs-type\">Two</span> => <span class=\"hljs-string\">\"two\"</span>\n      | <span class=\"hljs-type\">Tree</span> => <span class=\"hljs-string\">\"three\"</span>\n      }\n  )\n]) /* => <span class=\"hljs-string\">\"one two\"</span> */\n\nCn.make([\n  <span class=\"hljs-string\">\"one\"</span>,\n  Cn.mapOpt(\n    None,\n    (v) =>\n      switch v {\n      | <span class=\"hljs-type\">One</span> => <span class=\"hljs-string\">\"one\"</span>\n      | <span class=\"hljs-type\">Two</span> => <span class=\"hljs-string\">\"two\"</span>\n      | <span class=\"hljs-type\">Tree</span> => <span class=\"hljs-string\">\"three\"</span>\n      }\n  )\n]) /* => <span class=\"hljs-string\">\"one\"</span> */</code></pre>\n<h2 id=\"license\"><a aria-hidden=\"true\" href=\"#license\"><span class=\"icon icon-link\"></span></a>License</h2>\n<p>It's MIT.</p>"}